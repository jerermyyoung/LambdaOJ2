# -*- coding: utf-8 -*-
# Generated by Django 1.10.6 on 2017-08-15 08:35
from __future__ import unicode_literals

import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0008_alter_user_username_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=30, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('student_id', models.CharField(blank=True, max_length=20, verbose_name='学号')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': '用户',
                'verbose_name_plural': '用户',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Problem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order', models.PositiveIntegerField(unique=True, verbose_name='顺序')),
                ('title', models.CharField(max_length=100, verbose_name='标题')),
                ('time_limit', models.IntegerField(help_text='单位为 s', verbose_name='时间限制')),
                ('memory_limit', models.IntegerField(help_text='单位为 KB', verbose_name='内存限制')),
                ('desc', models.TextField(verbose_name='题目描述')),
                ('input_desc', models.TextField(blank=True, verbose_name='输入描述')),
                ('output_desc', models.TextField(blank=True, verbose_name='输出描述')),
                ('input_sample', models.TextField(blank=True, verbose_name='输入样例')),
                ('output_sample', models.TextField(blank=True, verbose_name='输出样例')),
                ('hint', models.TextField(blank=True, verbose_name='提示')),
                ('sample_num', models.PositiveIntegerField(verbose_name='测试数据总数')),
                ('deadline', models.DateTimeField(help_text='过期的提交，计算成绩时会打折扣。', verbose_name='截止日期')),
                ('released', models.BooleanField(default=False, help_text='普通学生账号只能看到已发布的题目。', verbose_name='是否已发布')),
                ('contributor', models.TextField(blank=True, verbose_name='题目贡献者')),
                ('create_time', models.DateTimeField(default=django.utils.timezone.now, verbose_name='创建时间')),
            ],
            options={
                'ordering': ['order'],
                'verbose_name': '题目',
                'verbose_name_plural': '题目',
            },
        ),
    ]
